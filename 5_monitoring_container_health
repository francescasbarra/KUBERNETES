#MONITORING CONTAINER HEALTH WITH PROBES

PROBES (SONDE) strumenti usati per raccogliere informazioni su un sistema, una rete o un servizio.
       ad es in kubernetes: liveness e readiness probes per verificare se un'app e attiva e pronta a ricevere traffico


#CONTAINER HEALTH
k8s provides many features that allows you to build robust solutions, such as the ability to automatically restart unehealthy containers


funzione, oggetto
funzioni api (application program interface) tramite tra prog esterno e applicazione


#LIVENESS PROBES
per verificare se app sta bene, diciamo noi a k8s quale api (funzione) della nostra applicazione interrogare
permette di determinare automaticamente se un container è in buono stato di salute, se funziona correttamente
questo meccanismo si può personalizzare

di default k8s considera un container down quando il processo del container si arresta

esegue un comando nel container e se va a buon fine il container verrà considerato in salute, altrimenti "unhealthy"


direttive (si scrivono nel manifest del pod)
"period seconds" =ogni quanti secondi devo controllare lo stato dell app 
failure threshold (soglia di fallimento) =dopo quanti fallimenti devo dichiarare fallita prima di riavviare l app
"initial delay seconds"=quanto tempo devo aspettare prima di fare il primo controllo

#READINESS PROBES
k8s interroga l app per sapere se l'app è pronta a ricevere traffico network, richieste
il traffico non viene inviato a un particolare pod finchè i suoi container non hanno passato il readiness check definito dalle readiness probes
INDICA SE L'APP è PRONTA A RICEVERE TRAFFICO, SE FALLISCE, IL POD RESTA IN ESECUZIONE MA NON RICEVE RICHIESTE
come startup probes sono in esecuzione durante l'avvio del processo 

funziona quando ci sono problemi

#http get (curl url) dove risponde l applicazione  "httpGet" http type probe to make an HTTP GET request

o #exec che esegue comando nel container


controlla se pod pronto 
se è pronto viene considerato dal service che invia traffico



#STARTUP PROBES
per app che ci mettono molto tempo ad avviarsi
failure treshold + alte e period seconds + lunghi
controllo iniziale poi entra in gioco liveness probe (che sta sempre attiva e controlla se l app

#sono simili alle liviness probes, mentre le liviness probes sono costantemente in esecuzione, startup probes sono eseguite solo  all'avvio del container e si arrestanno una volta che vanno a buon fine, usate per determinare quando l'applicazione si è avviata con successo

le probes si possono definire sul manifest dell'app


cronjob > job > pod  job crea un pod, il pod fa quel che deve e poi va in stato exited

deployment specifica uno stato desiderato e si assicura che 
crea il replicaset e il pod che deve stare sempre in running

restart policy
ALWAYS sia se il pod dà risultato positivo o neg viene restartato, k8s fa ripartire il pod



